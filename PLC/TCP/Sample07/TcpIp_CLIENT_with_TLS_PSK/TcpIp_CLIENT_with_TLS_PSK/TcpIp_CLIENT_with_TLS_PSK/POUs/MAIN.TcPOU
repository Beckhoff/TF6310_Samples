<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="MAIN" Id="{1ab60bce-2155-45d7-b4bb-787adb64acf0}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	sSrvNetID   : T_AmsNetID :='';(* TwinCAT TCP/IP server network address *)
	{warning 'Please configure your server IP-address and server port number below:'}
	sRemoteHost : T_IPv4Addr :='127.0.0.1';(* IP address of remote server! *)
	nRemotePort : UINT       :=200;(* Port number of remote server! *)
	bEnable1    : BOOL       :=TRUE;(* TRUE => Enable client1 data exchange, FALSE => Disable *)
	bEnable2    : BOOL       :=FALSE;(* TRUE => Enable client2 data exchange, FALSE => Disable *)
	bEnable3    : BOOL       :=FALSE;(* TRUE => Enable client3 data exchange, FALSE => Disable *)
	bEnable4    : BOOL       :=FALSE;(* TRUE => Enable client3 data exchange, FALSE => Disable *)
	bEnable5    : BOOL       :=FALSE;(* TRUE => Enable client5 data exchange, FALSE => Disable *)
	bLog        : BOOL       :=TRUE;(* TRUE => Enable message/error log, FALSE => Disable*)

	bPSK        : BOOL       :=TRUE;(* TRUE => use PSK , FALSE => don't use PSK *)
	key         : ARRAY[0..14] OF BYTE:=[16#1B,16#D0,16#6F,16#D2,16#56,16#16,16#7D,16#C1,16#E8,16#C7,16#48,16#2A,16#8E,16#F5,16#FF];
	fbTls       : FB_TlsConfig;(* TLS/PSK configuration *)

	fbClient1   : FB_Client:=(sRemoteHost:=sRemoteHost, nRemotePort:=nRemotePort, sPrefix:='CLIENT1::');(* TCP/IP client (connection) instance *)
	fbClient2   : FB_Client:=(sRemoteHost:=sRemoteHost, nRemotePort:=nRemotePort, sPrefix:='CLIENT2::');
	fbClient3   : FB_Client:=(sRemoteHost:=sRemoteHost, nRemotePort:=nRemotePort, sPrefix:='CLIENT3::');
	fbClient4   : FB_Client:=(sRemoteHost:=sRemoteHost, nRemotePort:=nRemotePort, sPrefix:='CLIENT4::');
	fbClient5   : FB_Client:=(sRemoteHost:=sRemoteHost, nRemotePort:=nRemotePort, sPrefix:='CLIENT5::');
	fbCloseAll  : FB_SocketCloseAll;
	bInitialize : BOOL:=TRUE;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bInitialize THEN
	(* On PLC reset or program download close all created/opened sockets/connections *)
	fbCloseAll(sSrvNetID:=sSrvNetID, bExecute:=bInitialize);
	IF fbCloseAll.bBusy OR fbCloseAll.bError THEN
		RETURN;
	END_IF

	(* Configure TLS/PSK settings *)
	fbTls.Clear();
	IF bPSK THEN
		fbTls.AddPsk(key:=key, sIdentity:='MyIdentity');
	END_IF

	bInitialize:=FALSE;
END_IF

fbClient1(fbTls:=fbTls, sSrvNetID:=sSrvNetID, bEnable:=bEnable1, bLog:=bLog);
fbClient2(fbTls:=fbTls, sSrvNetID:=sSrvNetID, bEnable:=bEnable2, bLog:=bLog);
fbClient3(fbTls:=fbTls, sSrvNetID:=sSrvNetID, bEnable:=bEnable3, bLog:=bLog);
fbClient4(fbTls:=fbTls, sSrvNetID:=sSrvNetID, bEnable:=bEnable4, bLog:=bLog);
fbClient5(fbTls:=fbTls, sSrvNetID:=sSrvNetID, bEnable:=bEnable5, bLog:=bLog);
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>